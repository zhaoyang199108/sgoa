package com.bcqsoft.sgoa.common.util;

import com.jacob.activeX.ActiveXComponent;
import com.jacob.com.Dispatch;

/**
 * 指纹比对工具类
 * 
 * @author zbq
 * @date 2010-01-28
 */
public class MathFingerUtil {
	
	/**
	 * 指纹比对
	 * 
	 * @author ly
	 * @date 2010-01-28
	 * @param regFingertpl
	 *            数据库中指纹
	 * @param verFingertpl
	 *            输入的指纹
	 * @throws NativeException
	 * @throws IllegalAccessException
	 */
	public ActiveXComponent zhuChe() {
		ActiveXComponent ac = new ActiveXComponent(
				"clsid:35515A76-3049-4D2A-8457-FD83173037E9");
		return ac;
	}

	/**
	 * 指纹比对
	 * 
	 * @author ly
	 * @date 2010-01-28
	 * @param regFingertpl
	 *            数据库中指纹
	 * @param verFingertpl
	 *            输入的指纹
	 * @throws NativeException
	 * @throws IllegalAccessException
	 */
	public int verFinger(ActiveXComponent ac, String regFingertpl, String verFingertpl,
			String verFingertpl2, String verFingertpl3) {

		Dispatch sControl = (Dispatch) ac.getObject();
		// 目标指纹与原指纹1比对
		int res1 = Dispatch.call(sControl, "ZAZMatch", regFingertpl,
				verFingertpl).getInt();
		// 目标指纹与原指纹2比对
		int res2 = Dispatch.call(sControl, "ZAZMatch", regFingertpl,
				verFingertpl2).getInt();
		// 目标指纹与原指纹3比对
		int res3 = Dispatch.call(sControl, "ZAZMatch", regFingertpl,
				verFingertpl3).getInt();
		// 取得比对结果的最大值，作为比对结果
		if (res1 < res2) {
			res1 = res2;
		}
		if (res1 < res3) {
			res1 = res3;
		}
		sControl = null;
		ac = null;
		return res1;
	}

	/**
	 * 测试主方法
	 * 
	 * @param args
	 * @throws IllegalAccessException
	 * @throws NativeException
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		MathFingerUtil math = new MathFingerUtil();
		String s
		String s
		String s
		String s
//		int ss = math.verFinger(s1, s2, s3, s4);
//		System.out.print(ss);
	}
}
